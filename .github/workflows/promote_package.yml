name: Promote Python Package

on:
  repository_dispatch:  # Triggered by Cloudsmith webhook
    types: [package-synchronized]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Tag Package as "ready-for-production"
        run: |
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${{ github.event.client_payload.package_version }}.tar.gz"
          echo "Searching for package with query: $PACKAGE_QUERY"

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Failed to find package identifier"
            exit 1
          fi
          
          echo "Found package identifier: $IDENTIFIER"

          # Tagging the package
          cloudsmith tags add ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER ready-for-production

      - name: Get Ready Packages and Promote
        run: |
          # Query for packages tagged with "ready-for-production"
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} --verbose -F json)

          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[] | select(.tags.info[]? == "ready-for-production") | .identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "No packages tagged as ready-for-production"
            exit 1
          fi
          
          echo "Found package(s) ready for production: $IDENTIFIER"

          # Promote all ready-for-production packages
          for ID in $IDENTIFIER; do
            echo "Promoting package $ID"
            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$ID \
              ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
        shell: bash
